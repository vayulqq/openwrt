name: Build Xiaomi AX3000T
on:
   workflow_dispatch:

jobs:
    build:
        name: Prepare and build Xiaomi AX3000T
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a

            - name: Generate config for Xiaomi AX3000T
              run: |
                echo "CONFIG_TARGET_mediatek=y\n" > .config
                echo "CONFIG_TARGET_mediatek_filogic=y\n" >> .config
                echo "CONFIG_TARGET_MULTI_PROFILE=y\n" >> .config
                echo "CONFIG_TARGET_PER_DEVICE_ROOTFS=y\n" >> .config
                echo "CONFIG_TARGET_DEVICE_mediatek_filogic_DEVICE_xiaomi_mi-router-ax3000t=y\n" >> .config
                echo "CONFIG_TARGET_DEVICE_mediatek_filogic_DEVICE_xiaomi_mi-router-ax3000t-ubootmod=y\n" >> .config
                echo "CONFIG_PACKAGE_wpad-basic-mbedtls=m\n" >> .config
                echo "CONFIG_PACKAGE_libwolfsslcpu-crypto=y\n" >> .config
                echo "CONFIG_PACKAGE_wpad-wolfssl=y\n" >> .config
                echo "CONFIG_PACKAGE_dnsmasq=m\n" >> .config
                echo "CONFIG_PACKAGE_dnsmasq-full=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-nf-nathelper=y\n" >> .config
                echo "CONFIG_PACKAGE_kmod-nf-nathelper-extra=y\n" >> .config
                echo "CONFIG_PACKAGE_luci=y\n" >> .config
                echo "CONFIG_PACKAGE_luci-proto-wireguard=y\n" >> .config
                echo "CONFIG_PACKAGE_xl2tpd=y\n" >> .config
                echo "CONFIG_PACKAGE_mdio-tools=y\n" >> .config

                make defconfig

            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s

            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s

            - name: Build target images
              run: |
                make -j$(nproc) V=s || \
                make V=s

            - name: TAR output
              run: tar -cvf filogicx-images.tar bin/targets/mediatek/filogic/

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: filogic-images
                path: filogicx-images.tar
